{"ast":null,"code":"const baseUrl = 'http://localhost:3001';\nasync function getLoggedUser() {\n  try {\n    const loggedUser = await fetch(baseUrl + '/logged_user');\n    const response = await loggedUser.json();\n    return response;\n  } catch (error) {\n    console.log('Issue occured while retrieving logged user: ' + error);\n  }\n}\nasync function logUser({\n  email,\n  password\n}) {\n  try {\n    const userData = await fetch(baseUrl + '/login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const user = await userData.json();\n    return user;\n  } catch (error) {\n    console.log('Issue occured on login: ' + error);\n  }\n}\nasync function register(user) {\n  try {\n    const userData = await fetch(baseUrl + '/register', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    const registeredUser = await userData.json();\n    return registeredUser;\n  } catch (error) {\n    console.log('Issue occured on register: ' + error);\n  }\n}\nasync function logout() {\n  try {\n    await fetch(baseUrl + '/logout', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  } catch (error) {\n    console.log('Issue occured on logout: ' + error);\n  }\n}\nasync function addCategory(category) {\n  try {\n    const categoryData = await fetch(baseUrl + '/add_category', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(category)\n    });\n    const updatedUser = await categoryData.json();\n    return updatedUser;\n  } catch {\n    console.log('Issue occured on add category.');\n  }\n}\nasync function assignCategory(category, id) {\n  try {\n    const categoryData = await fetch(baseUrl + '/assign_category', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        category,\n        id\n      })\n    });\n    const updatedUser = await categoryData.json();\n    return updatedUser;\n  } catch {\n    console.log('Issue occured on assign category.');\n  }\n}\nexport { logUser, register, getLoggedUser, logout, addCategory, assignCategory };","map":{"version":3,"names":["baseUrl","getLoggedUser","loggedUser","fetch","response","json","error","console","log","logUser","email","password","userData","method","headers","body","JSON","stringify","user","register","registeredUser","logout","addCategory","category","categoryData","updatedUser","assignCategory","id"],"sources":["/Users/ax/codeworks/senior/legacy/SpendTune-Solo-Project/client/spendtune/src/apiService.jsx"],"sourcesContent":["const baseUrl = 'http://localhost:3001';\n\nasync function getLoggedUser() {\n  try {\n    const loggedUser = await fetch(baseUrl + '/logged_user')\n    const response = await loggedUser.json();\n    return response;\n  } catch(error) {\n    console.log('Issue occured while retrieving logged user: ' + error);\n  }\n}\n\nasync function logUser({ email, password }) {\n  try {\n    const userData = await fetch(baseUrl + '/login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({email, password})\n    })\n    const user = await userData.json();\n    return user;\n  } catch (error) {\n    console.log('Issue occured on login: ' + error)\n  }\n}\n\nasync function register(user) {\n  try {\n    const userData = await fetch(baseUrl + '/register', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n    const registeredUser = await userData.json();\n    return registeredUser;\n  } catch (error) {\n    console.log('Issue occured on register: ' + error)\n  }\n}\n\nasync function logout() {\n  try {\n    await fetch(baseUrl + '/logout', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n  } catch(error) {\n    console.log('Issue occured on logout: ' + error)\n  }\n}\n\nasync function addCategory(category) {\n  try {\n    const categoryData = await fetch(baseUrl + '/add_category', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(category)\n    })\n    const updatedUser = await categoryData.json();\n    return updatedUser;\n  } catch {\n    console.log('Issue occured on add category.')\n  }\n}\n\nasync function assignCategory(category, id) {\n  try {\n    const categoryData = await fetch(baseUrl + '/assign_category', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({category, id})\n    })\n    const updatedUser = await categoryData.json();\n    return updatedUser;\n  } catch {\n    console.log('Issue occured on assign category.')\n\n  }\n}\n\nexport { logUser, register, getLoggedUser, logout, addCategory, assignCategory }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}